@using Microsoft.JSInterop

@implements IAsyncDisposable

@inject NavigationManager NavigationManager
@inject IJSRuntime JS

<div id="@id" class="nav-menu-item row button" @onclick="ActivateItemAsync">
	<div class="nav-menu-item-icon column">
		<EvaIcon Icon="Icon"></EvaIcon>
	</div>

	<div class="nav-menu-item-text column">
		@Text
	</div>
</div>

@code {
	private string id = string.Empty;
	private IJSObjectReference? module;

	[Parameter]
	public string? Text { get; set; }

	[Parameter]
	public EvaIcons? Icon { get; set; }

	[Parameter]
	public string? Page { get; set; }

	[Parameter]
	public bool Activated { get; set; }

	protected override void OnInitialized()
	{
		id = Guid.NewGuid().ToString("n").Substring(0, 8);
		base.OnInitialized();
	}

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender)
		{
			module = await JS.InvokeAsync<IJSObjectReference>("import", $"{Lib.ComponentsPath}/NavMenuItem.razor.js");
			if (Activated) await ActivateItemAsync();
		}

		await base.OnAfterRenderAsync(firstRender);
	}

	private async Task ActivateItemAsync()
	{
		ArgumentNullException.ThrowIfNull(module);
		await module.InvokeVoidAsync("navMenuItemActivated", id);
		NavigationManager.NavigateTo(Page ?? string.Empty);
		Activated = true;
	}

	async ValueTask IAsyncDisposable.DisposeAsync()
	{
		if (module is not null)
		{
			await module.DisposeAsync();
		}
	}
}
